#!/bin/bash
#	docker-search  0.14.38  2019-02-22T09:24:24.216196-06:00 (CST)  https://github.com/BradleyA/Search-docker-registry-v2-script.2.0.git  uadmin  two.cptx86.com 0.13  
#	   design changes on repository directory variables 
#	docker-search  0.13.37  2019-02-21T12:56:34.520837-06:00 (CST)  https://github.com/BradleyA/Search-docker-registry-v2-script.2.0.git  uadmin  two.cptx86.com 0.12  
#	   add comment with directory 
#	docker-search  0.12.36  2019-02-21T12:34:55.804757-06:00 (CST)  https://github.com/BradleyA/Search-docker-registry-v2-script.2.0.git  uadmin  two.cptx86.com 0.11  
#	   add markit to file 
#
###	View private registry v2,
#		if PERSISTENT REGISTRY_ROOTDIRECTORY is mounted on your system
#	Need to test when future release support
#		Configurable trust servers for users running a private registry
#
#####	Enter the full path to your dev (development) private registry v2 
#	This is the default and the only registry that is required to be defined in this script
#	If the environment variable is defined it will over ride the setting of this script variable.
#
if [ -z ${REGISTRY_ROOTDIRECTORY} ]
then
#    REGISTRY_ROOTDIRECTORY="/mnt/three/docker-registry/registry-data"
    REGISTRY_ROOTDIRECTORY="/usr/local/docker-registry-$REGISTRY_PORT/"
#	Need to look at this directory structure
#		/usr/local/docker-registry-17313/docker/registry/v2/repositories/{dev1,dev2,dev3,docker,x prod,prom,svt1}
#		docker-registry-17313/docker/registry/v2/repositories
fi
#
#####	Change the registry flag name to the full path of your teams private registries if more than one registry is used.
#	Each team requires control over the image while it is moving through the teams process.
#
#	fvt (function verification test)
FVT_REGISTRY="docker/registry/v2/repositories/fvt"
#	gvt (global verification test)
GVT_REGISTRY="docker/registry/v2/repositories/gvt"
#	svt (security verification test)
SVT_REGISTRY="docker/registry/v2/repositories/svt"
#	plisp (performance/load/integration/stress/platform test)
PLISP_REGISTRY="docker/registry/v2/repositories/plisp"
#	prom (promote release staging)
PROM_REGISTRY="docker/registry/v2/repositories/prom"
#	prod (production)
PROD_REGISTRY="docker/registry/v2/repositories/prod"
#	roll (roll back staging)
ROLL_REGISTRY="docker/registry/v2/repositories/roll"
#	hist (historic)
HIST_REGISTRY="docker/registry/v2/repositories/hist"
#	v2 (/var/lib/registry)	This is the docker registry default location. 
v2_REGISTRY="/var/lib/registry"
#
#####	Define the default registry dev (development)
#
REGISTRY_NAME=dev
#
#####	Parse command flags
#
while [[ $# > 0 ]]
do
key="$1"
case $key in
    -r|--registry)
    REGISTRY_NAME="$2"
    shift # past argument
    ;;
    -h|--help|-\?)
    echo "Usage: docker-search [OPTIONS] [IMAGE_NAME]"
    echo -e "\nSearch Private Docker Registry v2 for images\n"
    echo "  -h, --help=false      Print usage"
    echo "  -r, --registry dev    dev (development)  default"
    echo "                        fvt (function verification test)"
    echo "                        gvt (global verification test)"
    echo "                        svt (security verification test)"
    echo "                        plisp (performance/load/integration/stress/platform test)"
    echo "                        prom (promote release staging) "
    echo "                        prod (production)"
    echo "                        roll (roll back staging)"
    echo "                        hist (historic)"
    echo "                        v2 (/var/lib/registry)"
    exit 0
    ;;
    -*)
    echo "Flag provided but not defined: $1"
    echo "See 'docker-search --help'."
    exit 0
    ;;
    *)
    IMAGE_NAME=$1
    ;;
esac
shift
done
#
#####	Set REGISTRY_ROOTDIRECTORY according to flag entered on command line.
#
case $REGISTRY_NAME in
    dev)	;;
    fvt)	REGISTRY_ROOTDIRECTORY=${REGISTRY_ROOTDIRECTORY}/${FVT_REGISTRY};;
    gvt)	REGISTRY_ROOTDIRECTORY=${REGISTRY_ROOTDIRECTORY}/${GVT_REGISTRY};;
    svt)	REGISTRY_ROOTDIRECTORY=${REGISTRY_ROOTDIRECTORY}/${SVT_REGISTRY};;
    plisp)	REGISTRY_ROOTDIRECTORY=${REGISTRY_ROOTDIRECTORY}/${PLISP_REGISTRY};;
    prom)	REGISTRY_ROOTDIRECTORY=${REGISTRY_ROOTDIRECTORY}/${PROM_REGISTRY};;
    prod)	REGISTRY_ROOTDIRECTORY=${REGISTRY_ROOTDIRECTORY}/${PROD_REGISTRY};;
    roll)	REGISTRY_ROOTDIRECTORY=${REGISTRY_ROOTDIRECTORY}/${ROLL_REGISTRY};;
    hist)	REGISTRY_ROOTDIRECTORY=${REGISTRY_ROOTDIRECTORY}/${HIST_REGISTRY};;
    v2)		REGISTRY_ROOTDIRECTORY="/var/lib/registry";;
esac
#
#####	Print debug information
#
echo -e "\nREGISTRY_ROOTDIRECTORY = ${REGISTRY_ROOTDIRECTORY}"
echo REGISTRY_NAME  = "${REGISTRY_NAME}"
echo IMAGE_NAME     = "${IMAGE_NAME}"
#
#####	Test if REGISTRY_ROOTDIRECTORY is a directory
#
if [ ! -d "${REGISTRY_ROOTDIRECTORY}" ]
then
    echo "WARNING: ${REGISTRY_ROOTDIRECTORY} is not a directory."
    exit 0
fi
#
#####	May need to tweak as registry releases change file name format
#
find ${REGISTRY_ROOTDIRECTORY} -print | \
	grep 'v2/repositories' | \
	grep 'current' | \
	grep -v 'link' | \
	sed -e 's/\/_manifests\/tags\//:/' | \
	sed -e 's/\/current//' | \
	sed -e 's/^.*repositories\//	/' | \
	sort > /tmp/a1
if [ -n "${IMAGE_NAME}" ]
then
    grep ${IMAGE_NAME} /tmp/a1
else
    cat /tmp/a1
fi
wc -l /tmp/a1 > /tmp/a2
echo "Number of images:	`cat /tmp/a2 | awk {'print $1'}`"
echo "Disk space used:	`du -hs ${REGISTRY_ROOTDIRECTORY}`"
rm /tmp/a1 /tmp/a2
